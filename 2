from web3 import Web3

# Connect to Rinkeby testnet
w3 = Web3(Web3.HTTPProvider("https://rinkeby.infura.io/v3/YOUR_PROJECT_ID"))

# Compile the contract code
contract_source_code = '''
pragma solidity ^0.8.0;

contract SimpleContract {
    uint public storedData;

    function set(uint x) public {
        storedData = x;
    }

    function get() public view returns (uint) {
        return storedData;
    }
}
'''
compiled_contract = w3.eth.compile.solidity(contract_source_code)

# Deploy the contract
contract_interface = compiled_contract['<stdin>:SimpleContract']
contract = w3.eth.contract(abi=contract_interface['abi'], bytecode=contract_interface['bin'])

# Get the address of an unlocked account
from_address = 'YOUR_ACCOUNT_ADDRESS'

# Estimate the gas required to deploy the contract
gas_estimate = contract.constructor().estimateGas()

# Send a transaction to deploy the contract
transaction = contract.constructor().buildTransaction({
    'from': from_address,
    'gas': gas_estimate,
    'gasPrice': w3.eth.gasPrice,
    'nonce': w3.eth.getTransactionCount(from_address)
})

#sign the transaction using the private key of the account
signed_transaction
